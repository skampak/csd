Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | %empty

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr PLUS expr
   16     | expr MINUS expr
   17     | expr STAR expr
   18     | expr SLASH expr
   19     | expr MOD expr
   20     | expr GREATER expr
   21     | expr GREATER_OR_EQUAL expr
   22     | expr LESSER expr
   23     | expr LESSER_OR_EQUAL expr
   24     | expr EQUAL expr
   25     | expr UNEQUAL expr
   26     | expr AND expr
   27     | expr OR expr
   28     | term

   29 term: PARENTHESES_OPEN expr PARENTHESES_CLOSE
   30     | MINUS expr
   31     | NOT expr
   32     | PLUS_PLUS lvalue
   33     | lvalue PLUS_PLUS
   34     | MINUS_MINUS lvalue
   35     | lvalue MINUS_MINUS
   36     | primary

   37 assignexpr: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | PARENTHESES_OPEN funcdef PARENTHESES_CLOSE
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | SCOPE ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue BRACKET_OPEN expr BRACKET_CLOSE
   49       | call DOT ID
   50       | call BRACKET_OPEN expr BRACKET_CLOSE

   51 call: call PARENTHESES_OPEN elist PARENTHESES_CLOSE
   52     | lvalue callsuffix
   53     | PARENTHESES_OPEN funcdef PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: PARENTHESES_OPEN elist PARENTHESES_CLOSE

   57 methodcall: DOT_DOT ID PARENTHESES_OPEN elist PARENTHESES_CLOSE

   58 elist: elist_plus
   59      | %empty

   60 elist_plus: expr
   61           | elist_plus COMMA expr

   62 objectdef: BRACKET_OPEN elist BRACKET_CLOSE
   63          | BRACKET_OPEN indexed BRACKET_CLOSE

   64 indexed: indexedelem
   65        | indexed COMMA indexedelem

   66 indexedelem: BLOCK_START expr COLON expr BLOCK_END

   67 $@1: %empty

   68 block: BLOCK_START $@1 stmts BLOCK_END

   69 $@2: %empty

   70 $@3: %empty

   71 $@4: %empty

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE block

   73 $@5: %empty

   74 $@6: %empty

   75 $@7: %empty

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 idlist $@7 PARENTHESES_CLOSE block

   77 const: INTEGER
   78      | REAL
   79      | STRING_LITERAL
   80      | NIL
   81      | IS_TRUE
   82      | IS_FALSE

   83 idlist: idlist_plus
   84       | %empty

   85 idlist_plus: ID
   86            | idlist_plus COMMA ID

   87 ifstmt: IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt ELSE stmt
   88       | IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt

   89 $@8: %empty

   90 whilestmt: WHILE PARENTHESES_OPEN $@8 expr PARENTHESES_CLOSE stmt

   91 $@9: %empty

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt

   93 returnstmt: RETURN expr SEMICOLON
   94           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 43 44 45 47 49 57 72 85 86
STRING_LITERAL (259) 79
INTEGER (260) 77
REAL (261) 78
IF (262) 87 88
ELSE (263) 87
WHILE (264) 90
FOR (265) 92
FUNCTION (266) 72 76
RETURN (267) 93 94
BREAK (268) 9
CONTINUE (269) 10
AND (270) 26
NOT (271) 31
OR (272) 27
LOCAL (273) 44
IS_TRUE (274) 81
IS_FALSE (275) 82
NIL (276) 80
ASSIGN (277) 37
PLUS (278) 15
MINUS (279) 16 30
STAR (280) 17
SLASH (281) 18
MOD (282) 19
EQUAL (283) 24
UNEQUAL (284) 25
PLUS_PLUS (285) 32 33
MINUS_MINUS (286) 34 35
GREATER (287) 20
LESSER (288) 22
GREATER_OR_EQUAL (289) 21
LESSER_OR_EQUAL (290) 23
BLOCK_START (291) 66 68
BLOCK_END (292) 66 68
BRACKET_OPEN (293) 48 50 62 63
BRACKET_CLOSE (294) 48 50 62 63
PARENTHESES_OPEN (295) 29 41 51 53 56 57 72 76 87 88 90 92
PARENTHESES_CLOSE (296) 29 41 51 53 56 57 72 76 87 88 90 92
SEMICOLON (297) 4 9 10 13 92 93 94
COMMA (298) 61 65 86
COLON (299) 66
SCOPE (300) 45
DOT (301) 47 49
DOT_DOT (302) 57
UNARY_MINUS (303)
THEN (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
stmts (52)
    on left: 2 3, on right: 1 2 68
stmt (53)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 2 87 88 90 92
expr (54)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 60 61
    66 87 88 90 92 93
term (55)
    on left: 29 30 31 32 33 34 35 36, on right: 28
assignexpr (56)
    on left: 37, on right: 14
primary (57)
    on left: 38 39 40 41 42, on right: 36
lvalue (58)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
member (59)
    on left: 47 48 49 50, on right: 46
call (60)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (61)
    on left: 54 55, on right: 52
normcall (62)
    on left: 56, on right: 54
methodcall (63)
    on left: 57, on right: 55
elist (64)
    on left: 58 59, on right: 51 53 56 57 62 92
elist_plus (65)
    on left: 60 61, on right: 58 61
objectdef (66)
    on left: 62 63, on right: 40
indexed (67)
    on left: 64 65, on right: 63 65
indexedelem (68)
    on left: 66, on right: 64 65
block (69)
    on left: 68, on right: 11 72 76
$@1 (70)
    on left: 67, on right: 68
funcdef (71)
    on left: 72 76, on right: 12 41 53
$@2 (72)
    on left: 69, on right: 72
$@3 (73)
    on left: 70, on right: 72
$@4 (74)
    on left: 71, on right: 72
$@5 (75)
    on left: 73, on right: 76
$@6 (76)
    on left: 74, on right: 76
$@7 (77)
    on left: 75, on right: 76
const (78)
    on left: 77 78 79 80 81 82, on right: 42
idlist (79)
    on left: 83 84, on right: 72 76
idlist_plus (80)
    on left: 85 86, on right: 83 86
ifstmt (81)
    on left: 87 88, on right: 5
whilestmt (82)
    on left: 90, on right: 6
$@8 (83)
    on left: 89, on right: 90
forstmt (84)
    on left: 92, on right: 7
$@9 (85)
    on left: 91, on right: 92
returnstmt (86)
    on left: 93 94, on right: 8


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts .
    2 stmts: stmts . stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    $default  reduce using rule 1 (program)

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 3

    0 $accept: program $end .

    $default  accept


State 4

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 5

   79 const: STRING_LITERAL .

    $default  reduce using rule 79 (const)


State 6

   77 const: INTEGER .

    $default  reduce using rule 77 (const)


State 7

   78 const: REAL .

    $default  reduce using rule 78 (const)


State 8

   87 ifstmt: IF . PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt ELSE stmt
   88       | IF . PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt

    PARENTHESES_OPEN  shift, and go to state 44


State 9

   90 whilestmt: WHILE . PARENTHESES_OPEN $@8 expr PARENTHESES_CLOSE stmt

    PARENTHESES_OPEN  shift, and go to state 45


State 10

   92 forstmt: FOR . PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt

    PARENTHESES_OPEN  shift, and go to state 46


State 11

   72 funcdef: FUNCTION . ID $@2 PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE block
   76        | FUNCTION . $@5 PARENTHESES_OPEN $@6 idlist $@7 PARENTHESES_CLOSE block

    ID  shift, and go to state 47

    $default  reduce using rule 73 ($@5)

    $@5  go to state 48


State 12

   93 returnstmt: RETURN . expr SEMICOLON
   94           | RETURN . SEMICOLON

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 49
    SCOPE             shift, and go to state 27

    expr        go to state 50
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 13

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 14

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 15

   31 term: NOT . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 53
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 16

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 54


State 17

   81 const: IS_TRUE .

    $default  reduce using rule 81 (const)


State 18

   82 const: IS_FALSE .

    $default  reduce using rule 82 (const)


State 19

   80 const: NIL .

    $default  reduce using rule 80 (const)


State 20

   30 term: MINUS . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 55
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 21

   32 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 16
    PARENTHESES_OPEN  shift, and go to state 56
    SCOPE             shift, and go to state 27

    lvalue  go to state 57
    member  go to state 34
    call    go to state 58


State 22

   34 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 16
    PARENTHESES_OPEN  shift, and go to state 56
    SCOPE             shift, and go to state 27

    lvalue  go to state 59
    member  go to state 34
    call    go to state 58


State 23

   68 block: BLOCK_START . $@1 stmts BLOCK_END

    $default  reduce using rule 67 ($@1)

    $@1  go to state 60


State 24

   62 objectdef: BRACKET_OPEN . elist BRACKET_CLOSE
   63          | BRACKET_OPEN . indexed BRACKET_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 61
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr         go to state 62
    term         go to state 30
    assignexpr   go to state 31
    primary      go to state 32
    lvalue       go to state 33
    member       go to state 34
    call         go to state 35
    elist        go to state 63
    elist_plus   go to state 64
    objectdef    go to state 36
    indexed      go to state 65
    indexedelem  go to state 66
    const        go to state 39


State 25

   29 term: PARENTHESES_OPEN . expr PARENTHESES_CLOSE
   41 primary: PARENTHESES_OPEN . funcdef PARENTHESES_CLOSE
   53 call: PARENTHESES_OPEN . funcdef PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    FUNCTION          shift, and go to state 11
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 67
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    funcdef     go to state 68
    const       go to state 39


State 26

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 27

   45 lvalue: SCOPE . ID

    ID  shift, and go to state 69


State 28

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


State 29

    4 stmt: expr . SEMICOLON
   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    SEMICOLON         shift, and go to state 83


State 30

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 31

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 32

   36 term: primary .

    $default  reduce using rule 36 (term)


State 33

   33 term: lvalue . PLUS_PLUS
   35     | lvalue . MINUS_MINUS
   37 assignexpr: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . BRACKET_OPEN expr BRACKET_CLOSE
   52 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 84
    PLUS_PLUS         shift, and go to state 85
    MINUS_MINUS       shift, and go to state 86
    BRACKET_OPEN      shift, and go to state 87
    PARENTHESES_OPEN  shift, and go to state 88
    DOT               shift, and go to state 89
    DOT_DOT           shift, and go to state 90

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 34

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 35

   39 primary: call .
   49 member: call . DOT ID
   50       | call . BRACKET_OPEN expr BRACKET_CLOSE
   51 call: call . PARENTHESES_OPEN elist PARENTHESES_CLOSE

    BRACKET_OPEN      shift, and go to state 94
    PARENTHESES_OPEN  shift, and go to state 95
    DOT               shift, and go to state 96

    $default  reduce using rule 39 (primary)


State 36

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 37

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 40

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 41

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 42

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 44

   87 ifstmt: IF PARENTHESES_OPEN . expr PARENTHESES_CLOSE stmt ELSE stmt
   88       | IF PARENTHESES_OPEN . expr PARENTHESES_CLOSE stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 97
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 45

   90 whilestmt: WHILE PARENTHESES_OPEN . $@8 expr PARENTHESES_CLOSE stmt

    $default  reduce using rule 89 ($@8)

    $@8  go to state 98


State 46

   92 forstmt: FOR PARENTHESES_OPEN . $@9 elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt

    $default  reduce using rule 91 ($@9)

    $@9  go to state 99


State 47

   72 funcdef: FUNCTION ID . $@2 PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE block

    $default  reduce using rule 69 ($@2)

    $@2  go to state 100


State 48

   76 funcdef: FUNCTION $@5 . PARENTHESES_OPEN $@6 idlist $@7 PARENTHESES_CLOSE block

    PARENTHESES_OPEN  shift, and go to state 101


State 49

   94 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 94 (returnstmt)


State 50

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   93 returnstmt: RETURN expr . SEMICOLON

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    SEMICOLON         shift, and go to state 102


State 51

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 53

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


State 54

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 55

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


State 56

   53 call: PARENTHESES_OPEN . funcdef PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE

    FUNCTION  shift, and go to state 11

    funcdef  go to state 103


State 57

   32 term: PLUS_PLUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . BRACKET_OPEN expr BRACKET_CLOSE
   52 call: lvalue . callsuffix

    BRACKET_OPEN      shift, and go to state 87
    PARENTHESES_OPEN  shift, and go to state 88
    DOT               shift, and go to state 89
    DOT_DOT           shift, and go to state 90

    $default  reduce using rule 32 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 58

   49 member: call . DOT ID
   50       | call . BRACKET_OPEN expr BRACKET_CLOSE
   51 call: call . PARENTHESES_OPEN elist PARENTHESES_CLOSE

    BRACKET_OPEN      shift, and go to state 94
    PARENTHESES_OPEN  shift, and go to state 95
    DOT               shift, and go to state 96


State 59

   34 term: MINUS_MINUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . BRACKET_OPEN expr BRACKET_CLOSE
   52 call: lvalue . callsuffix

    BRACKET_OPEN      shift, and go to state 87
    PARENTHESES_OPEN  shift, and go to state 88
    DOT               shift, and go to state 89
    DOT_DOT           shift, and go to state 90

    $default  reduce using rule 34 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


State 60

   68 block: BLOCK_START $@1 . stmts BLOCK_END

    $default  reduce using rule 3 (stmts)

    stmts  go to state 104


State 61

   66 indexedelem: BLOCK_START . expr COLON expr BLOCK_END

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 105
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 62

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   60 elist_plus: expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    $default  reduce using rule 60 (elist_plus)


State 63

   62 objectdef: BRACKET_OPEN elist . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 106


State 64

   58 elist: elist_plus .
   61 elist_plus: elist_plus . COMMA expr

    COMMA  shift, and go to state 107

    $default  reduce using rule 58 (elist)


State 65

   63 objectdef: BRACKET_OPEN indexed . BRACKET_CLOSE
   65 indexed: indexed . COMMA indexedelem

    BRACKET_CLOSE  shift, and go to state 108
    COMMA          shift, and go to state 109


State 66

   64 indexed: indexedelem .

    $default  reduce using rule 64 (indexed)


State 67

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   29 term: PARENTHESES_OPEN expr . PARENTHESES_CLOSE

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    STAR               shift, and go to state 74
    SLASH              shift, and go to state 75
    MOD                shift, and go to state 76
    EQUAL              shift, and go to state 77
    UNEQUAL            shift, and go to state 78
    GREATER            shift, and go to state 79
    LESSER             shift, and go to state 80
    GREATER_OR_EQUAL   shift, and go to state 81
    LESSER_OR_EQUAL    shift, and go to state 82
    PARENTHESES_CLOSE  shift, and go to state 110


State 68

   41 primary: PARENTHESES_OPEN funcdef . PARENTHESES_CLOSE
   53 call: PARENTHESES_OPEN funcdef . PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 111


State 69

   45 lvalue: SCOPE ID .

    $default  reduce using rule 45 (lvalue)


State 70

   26 expr: expr AND . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 112
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 71

   27 expr: expr OR . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 113
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 72

   15 expr: expr PLUS . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 114
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 73

   16 expr: expr MINUS . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 115
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 74

   17 expr: expr STAR . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 116
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 75

   18 expr: expr SLASH . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 117
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 76

   19 expr: expr MOD . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 118
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 77

   24 expr: expr EQUAL . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 119
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 78

   25 expr: expr UNEQUAL . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 120
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 79

   20 expr: expr GREATER . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 121
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 80

   22 expr: expr LESSER . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 122
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 81

   21 expr: expr GREATER_OR_EQUAL . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 123
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 82

   23 expr: expr LESSER_OR_EQUAL . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 124
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 83

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 84

   37 assignexpr: lvalue ASSIGN . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 125
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 85

   33 term: lvalue PLUS_PLUS .

    $default  reduce using rule 33 (term)


State 86

   35 term: lvalue MINUS_MINUS .

    $default  reduce using rule 35 (term)


State 87

   48 member: lvalue BRACKET_OPEN . expr BRACKET_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 126
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 88

   56 normcall: PARENTHESES_OPEN . elist PARENTHESES_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 127
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 89

   47 member: lvalue DOT . ID

    ID  shift, and go to state 128


State 90

   57 methodcall: DOT_DOT . ID PARENTHESES_OPEN elist PARENTHESES_CLOSE

    ID  shift, and go to state 129


State 91

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 92

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 93

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 94

   50 member: call BRACKET_OPEN . expr BRACKET_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 130
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 95

   51 call: call PARENTHESES_OPEN . elist PARENTHESES_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 131
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 96

   49 member: call DOT . ID

    ID  shift, and go to state 132


State 97

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   87 ifstmt: IF PARENTHESES_OPEN expr . PARENTHESES_CLOSE stmt ELSE stmt
   88       | IF PARENTHESES_OPEN expr . PARENTHESES_CLOSE stmt

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    STAR               shift, and go to state 74
    SLASH              shift, and go to state 75
    MOD                shift, and go to state 76
    EQUAL              shift, and go to state 77
    UNEQUAL            shift, and go to state 78
    GREATER            shift, and go to state 79
    LESSER             shift, and go to state 80
    GREATER_OR_EQUAL   shift, and go to state 81
    LESSER_OR_EQUAL    shift, and go to state 82
    PARENTHESES_CLOSE  shift, and go to state 133


State 98

   90 whilestmt: WHILE PARENTHESES_OPEN $@8 . expr PARENTHESES_CLOSE stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 134
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 99

   92 forstmt: FOR PARENTHESES_OPEN $@9 . elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 135
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 100

   72 funcdef: FUNCTION ID $@2 . PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE block

    PARENTHESES_OPEN  shift, and go to state 136


State 101

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN . $@6 idlist $@7 PARENTHESES_CLOSE block

    $default  reduce using rule 74 ($@6)

    $@6  go to state 137


State 102

   93 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


State 103

   53 call: PARENTHESES_OPEN funcdef . PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 138


State 104

    2 stmts: stmts . stmt
   68 block: BLOCK_START $@1 stmts . BLOCK_END

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BLOCK_END         shift, and go to state 139
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    stmt        go to state 28
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 105

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   66 indexedelem: BLOCK_START expr . COLON expr BLOCK_END

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    COLON             shift, and go to state 140


State 106

   62 objectdef: BRACKET_OPEN elist BRACKET_CLOSE .

    $default  reduce using rule 62 (objectdef)


State 107

   61 elist_plus: elist_plus COMMA . expr

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 141
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 108

   63 objectdef: BRACKET_OPEN indexed BRACKET_CLOSE .

    $default  reduce using rule 63 (objectdef)


State 109

   65 indexed: indexed COMMA . indexedelem

    BLOCK_START  shift, and go to state 61

    indexedelem  go to state 142


State 110

   29 term: PARENTHESES_OPEN expr PARENTHESES_CLOSE .

    $default  reduce using rule 29 (term)


State 111

   41 primary: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE .
   53 call: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE . PARENTHESES_OPEN elist PARENTHESES_CLOSE

    PARENTHESES_OPEN  shift, and go to state 143

    $default  reduce using rule 41 (primary)


State 112

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   26     | expr AND expr .
   27     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    $default  reduce using rule 26 (expr)


State 113

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   27     | expr OR expr .

    AND               shift, and go to state 70
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    $default  reduce using rule 27 (expr)


State 114

   15 expr: expr . PLUS expr
   15     | expr PLUS expr .
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    $default  reduce using rule 15 (expr)


State 115

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   16     | expr MINUS expr .
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    $default  reduce using rule 16 (expr)


State 116

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   17     | expr STAR expr .
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 117

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   18     | expr SLASH expr .
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 118

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    $default  reduce using rule 19 (expr)


State 119

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   24     | expr EQUAL expr .
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    EQUAL    error (nonassociative)
    UNEQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 120

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   25     | expr UNEQUAL expr .
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    EQUAL    error (nonassociative)
    UNEQUAL  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 121

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   20     | expr GREATER expr .
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER           error (nonassociative)
    LESSER            error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESSER_OR_EQUAL   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 122

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   22     | expr LESSER expr .
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER           error (nonassociative)
    LESSER            error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESSER_OR_EQUAL   error (nonassociative)

    $default  reduce using rule 22 (expr)


State 123

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   21     | expr GREATER_OR_EQUAL expr .
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER           error (nonassociative)
    LESSER            error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESSER_OR_EQUAL   error (nonassociative)

    $default  reduce using rule 21 (expr)


State 124

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   23     | expr LESSER_OR_EQUAL expr .
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    STAR   shift, and go to state 74
    SLASH  shift, and go to state 75
    MOD    shift, and go to state 76

    GREATER           error (nonassociative)
    LESSER            error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESSER_OR_EQUAL   error (nonassociative)

    $default  reduce using rule 23 (expr)


State 125

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   37 assignexpr: lvalue ASSIGN expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    $default  reduce using rule 37 (assignexpr)


State 126

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   48 member: lvalue BRACKET_OPEN expr . BRACKET_CLOSE

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    BRACKET_CLOSE     shift, and go to state 144


State 127

   56 normcall: PARENTHESES_OPEN elist . PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 145


State 128

   47 member: lvalue DOT ID .

    $default  reduce using rule 47 (member)


State 129

   57 methodcall: DOT_DOT ID . PARENTHESES_OPEN elist PARENTHESES_CLOSE

    PARENTHESES_OPEN  shift, and go to state 146


State 130

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   50 member: call BRACKET_OPEN expr . BRACKET_CLOSE

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    BRACKET_CLOSE     shift, and go to state 147


State 131

   51 call: call PARENTHESES_OPEN elist . PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 148


State 132

   49 member: call DOT ID .

    $default  reduce using rule 49 (member)


State 133

   87 ifstmt: IF PARENTHESES_OPEN expr PARENTHESES_CLOSE . stmt ELSE stmt
   88       | IF PARENTHESES_OPEN expr PARENTHESES_CLOSE . stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    stmt        go to state 149
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 134

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   90 whilestmt: WHILE PARENTHESES_OPEN $@8 expr . PARENTHESES_CLOSE stmt

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    STAR               shift, and go to state 74
    SLASH              shift, and go to state 75
    MOD                shift, and go to state 76
    EQUAL              shift, and go to state 77
    UNEQUAL            shift, and go to state 78
    GREATER            shift, and go to state 79
    LESSER             shift, and go to state 80
    GREATER_OR_EQUAL   shift, and go to state 81
    LESSER_OR_EQUAL    shift, and go to state 82
    PARENTHESES_CLOSE  shift, and go to state 150


State 135

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist . SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt

    SEMICOLON  shift, and go to state 151


State 136

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN . $@3 idlist $@4 PARENTHESES_CLOSE block

    $default  reduce using rule 70 ($@3)

    $@3  go to state 152


State 137

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 . idlist $@7 PARENTHESES_CLOSE block

    ID  shift, and go to state 153

    $default  reduce using rule 84 (idlist)

    idlist       go to state 154
    idlist_plus  go to state 155


State 138

   53 call: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE . PARENTHESES_OPEN elist PARENTHESES_CLOSE

    PARENTHESES_OPEN  shift, and go to state 143


State 139

   68 block: BLOCK_START $@1 stmts BLOCK_END .

    $default  reduce using rule 68 (block)


State 140

   66 indexedelem: BLOCK_START expr COLON . expr BLOCK_END

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 156
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 141

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   61 elist_plus: elist_plus COMMA expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82

    $default  reduce using rule 61 (elist_plus)


State 142

   65 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 65 (indexed)


State 143

   53 call: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE PARENTHESES_OPEN . elist PARENTHESES_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 157
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 144

   48 member: lvalue BRACKET_OPEN expr BRACKET_CLOSE .

    $default  reduce using rule 48 (member)


State 145

   56 normcall: PARENTHESES_OPEN elist PARENTHESES_CLOSE .

    $default  reduce using rule 56 (normcall)


State 146

   57 methodcall: DOT_DOT ID PARENTHESES_OPEN . elist PARENTHESES_CLOSE

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 158
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 147

   50 member: call BRACKET_OPEN expr BRACKET_CLOSE .

    $default  reduce using rule 50 (member)


State 148

   51 call: call PARENTHESES_OPEN elist PARENTHESES_CLOSE .

    $default  reduce using rule 51 (call)


State 149

   87 ifstmt: IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt . ELSE stmt
   88       | IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt .

    ELSE  shift, and go to state 159

    $default  reduce using rule 88 (ifstmt)


State 150

   90 whilestmt: WHILE PARENTHESES_OPEN $@8 expr PARENTHESES_CLOSE . stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    stmt        go to state 160
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 151

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON . expr SEMICOLON elist PARENTHESES_CLOSE stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    expr        go to state 161
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    const       go to state 39


State 152

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 . idlist $@4 PARENTHESES_CLOSE block

    ID  shift, and go to state 153

    $default  reduce using rule 84 (idlist)

    idlist       go to state 162
    idlist_plus  go to state 155


State 153

   85 idlist_plus: ID .

    $default  reduce using rule 85 (idlist_plus)


State 154

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 idlist . $@7 PARENTHESES_CLOSE block

    $default  reduce using rule 75 ($@7)

    $@7  go to state 163


State 155

   83 idlist: idlist_plus .
   86 idlist_plus: idlist_plus . COMMA ID

    COMMA  shift, and go to state 164

    $default  reduce using rule 83 (idlist)


State 156

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   66 indexedelem: BLOCK_START expr COLON expr . BLOCK_END

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    BLOCK_END         shift, and go to state 165


State 157

   53 call: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE PARENTHESES_OPEN elist . PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 166


State 158

   57 methodcall: DOT_DOT ID PARENTHESES_OPEN elist . PARENTHESES_CLOSE

    PARENTHESES_CLOSE  shift, and go to state 167


State 159

   87 ifstmt: IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt ELSE . stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    stmt        go to state 168
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 160

   90 whilestmt: WHILE PARENTHESES_OPEN $@8 expr PARENTHESES_CLOSE stmt .

    $default  reduce using rule 90 (whilestmt)


State 161

   15 expr: expr . PLUS expr
   16     | expr . MINUS expr
   17     | expr . STAR expr
   18     | expr . SLASH expr
   19     | expr . MOD expr
   20     | expr . GREATER expr
   21     | expr . GREATER_OR_EQUAL expr
   22     | expr . LESSER expr
   23     | expr . LESSER_OR_EQUAL expr
   24     | expr . EQUAL expr
   25     | expr . UNEQUAL expr
   26     | expr . AND expr
   27     | expr . OR expr
   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr . SEMICOLON elist PARENTHESES_CLOSE stmt

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    STAR              shift, and go to state 74
    SLASH             shift, and go to state 75
    MOD               shift, and go to state 76
    EQUAL             shift, and go to state 77
    UNEQUAL           shift, and go to state 78
    GREATER           shift, and go to state 79
    LESSER            shift, and go to state 80
    GREATER_OR_EQUAL  shift, and go to state 81
    LESSER_OR_EQUAL   shift, and go to state 82
    SEMICOLON         shift, and go to state 169


State 162

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 idlist . $@4 PARENTHESES_CLOSE block

    $default  reduce using rule 71 ($@4)

    $@4  go to state 170


State 163

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 idlist $@7 . PARENTHESES_CLOSE block

    PARENTHESES_CLOSE  shift, and go to state 171


State 164

   86 idlist_plus: idlist_plus COMMA . ID

    ID  shift, and go to state 172


State 165

   66 indexedelem: BLOCK_START expr COLON expr BLOCK_END .

    $default  reduce using rule 66 (indexedelem)


State 166

   53 call: PARENTHESES_OPEN funcdef PARENTHESES_CLOSE PARENTHESES_OPEN elist PARENTHESES_CLOSE .

    $default  reduce using rule 53 (call)


State 167

   57 methodcall: DOT_DOT ID PARENTHESES_OPEN elist PARENTHESES_CLOSE .

    $default  reduce using rule 57 (methodcall)


State 168

   87 ifstmt: IF PARENTHESES_OPEN expr PARENTHESES_CLOSE stmt ELSE stmt .

    $default  reduce using rule 87 (ifstmt)


State 169

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON . elist PARENTHESES_CLOSE stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SCOPE             shift, and go to state 27

    $default  reduce using rule 59 (elist)

    expr        go to state 62
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 173
    elist_plus  go to state 64
    objectdef   go to state 36
    const       go to state 39


State 170

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 idlist $@4 . PARENTHESES_CLOSE block

    PARENTHESES_CLOSE  shift, and go to state 174


State 171

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 idlist $@7 PARENTHESES_CLOSE . block

    BLOCK_START  shift, and go to state 23

    block  go to state 175


State 172

   86 idlist_plus: idlist_plus COMMA ID .

    $default  reduce using rule 86 (idlist_plus)


State 173

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON elist . PARENTHESES_CLOSE stmt

    PARENTHESES_CLOSE  shift, and go to state 176


State 174

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE . block

    BLOCK_START  shift, and go to state 23

    block  go to state 177


State 175

   76 funcdef: FUNCTION $@5 PARENTHESES_OPEN $@6 idlist $@7 PARENTHESES_CLOSE block .

    $default  reduce using rule 76 (funcdef)


State 176

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE . stmt

    ID                shift, and go to state 4
    STRING_LITERAL    shift, and go to state 5
    INTEGER           shift, and go to state 6
    REAL              shift, and go to state 7
    IF                shift, and go to state 8
    WHILE             shift, and go to state 9
    FOR               shift, and go to state 10
    FUNCTION          shift, and go to state 11
    RETURN            shift, and go to state 12
    BREAK             shift, and go to state 13
    CONTINUE          shift, and go to state 14
    NOT               shift, and go to state 15
    LOCAL             shift, and go to state 16
    IS_TRUE           shift, and go to state 17
    IS_FALSE          shift, and go to state 18
    NIL               shift, and go to state 19
    MINUS             shift, and go to state 20
    PLUS_PLUS         shift, and go to state 21
    MINUS_MINUS       shift, and go to state 22
    BLOCK_START       shift, and go to state 23
    BRACKET_OPEN      shift, and go to state 24
    PARENTHESES_OPEN  shift, and go to state 25
    SEMICOLON         shift, and go to state 26
    SCOPE             shift, and go to state 27

    stmt        go to state 178
    expr        go to state 29
    term        go to state 30
    assignexpr  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    objectdef   go to state 36
    block       go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 177

   72 funcdef: FUNCTION ID $@2 PARENTHESES_OPEN $@3 idlist $@4 PARENTHESES_CLOSE block .

    $default  reduce using rule 72 (funcdef)


State 178

   92 forstmt: FOR PARENTHESES_OPEN $@9 elist SEMICOLON expr SEMICOLON elist PARENTHESES_CLOSE stmt .

    $default  reduce using rule 92 (forstmt)
